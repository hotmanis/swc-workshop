Multi-workshop website
======================

This branch contains per-workshop websites for several workshops, as
well as an index with a list of all per-workshop websites.  We keep
track of the workshop websites using `git submodule` to maintain local
checkouts of each workshop's website branch.

Add a new workshop
------------------

Check out that workshop's website branch into a subdirectory:

  $ git submodule add -b 2012-10-caltech.jekyll ./ 2012-10-caltech
  $ git config --file .gitmodules submodule.2012-10-caltech.branch 2012-10-caltech.jekyll

`git submodule` does not seem to have been designed with this kind of
local aggregation in mind, and neither has [GitHub's Pages
generator][pages-submodule].

After creating the submodule, add a link from `index.md`, preferably
in alphabetical order.  Finally, commit your changes:

  $ git commit -am '2012-10-caltech: add workshop submodule.'

Setting up submodules on a new checkout
---------------------------------------

When you checkout this branch, it will just have a `.gitmodules` file
and empty module directories.  To initialize the submodule metadata
and checkout the submodule content, you'll need to run:

  $ git submodule update --init

Maintain workshops
------------------

You can pull current versions of each submodule with:

  $ git submodule foreach 'git checkout $(git config --file $toplevel/.gitmodules submodule.$name.branch) && git pull'

The `$toplevel` variable requires Git commit f030c96d, released in
version 1.7.2.

Commit your changes with:

  $ git commit -am 'Update all submodules to current HEADs.'


[pages-submodule]: https://help.github.com/articles/using-submodules-with-pages
